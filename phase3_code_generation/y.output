Grammar

    0 $accept: Program $end

    1 Program: %empty
    2        | Function Program

    3 Function: FUNCTION Identifier SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    4 Dec: Declaration SEMICOLON Dec
    5    | %empty

    6 Stmt: Statement SEMICOLON Stmt
    7     | %empty

    8 Declaration: Ident COLON INTEGER
    9            | Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | Ident COLON ENUM L_PAREN Ident R_PAREN

   11 Ident: Identifier
   12      | Identifier COMMA Ident

   13 Statement: Var ASSIGN Expression
   14          | IF Bool_Expr THEN Stmt ENDIF
   15          | IF Bool_Expr THEN Stmt ELSE Stmt ENDIF
   16          | WHILE Bool_Expr BEGINLOOP Stmt ENDLOOP
   17          | DO BEGINLOOP Stmt ENDLOOP WHILE Bool_Expr
   18          | READ E_BRANCH
   19          | WRITE E_BRANCH
   20          | CONTINUE
   21          | RETURN Expression

   22 E_BRANCH: Var COMMA E_BRANCH
   23         | Var

   24 Bool_Expr: Relation_And_Expr OR Bool_Expr
   25          | Relation_And_Expr

   26 Relation_And_Expr: Relation_Expr AND Relation_And_Expr
   27                  | Relation_Expr

   28 Relation_Expr: RE_branch
   29              | NOT RE_branch

   30 RE_branch: Expression Comp Expression
   31          | TRUE
   32          | FALSE
   33          | L_PAREN Bool_Expr R_PAREN

   34 Comp: EQ
   35     | NEQ
   36     | LT
   37     | GT
   38     | LTE
   39     | GTE

   40 Expression: Multiplicative_Expr MINUS Expression
   41           | Multiplicative_Expr PLUS Expression
   42           | Multiplicative_Expr

   43 Multiplicative_Expr: Term MOD Multiplicative_Expr
   44                    | Term DIV Multiplicative_Expr
   45                    | Term MULT Multiplicative_Expr
   46                    | Term

   47 Term: Var
   48     | NUMBER
   49     | L_PAREN Expression R_PAREN
   50     | MINUS Var
   51     | MINUS NUMBER
   52     | MINUS L_PAREN Expression R_PAREN
   53     | Identifier L_PAREN Expr_Loop R_PAREN

   54 Expr_Loop: Expression
   55          | Expression COMMA Expr_Loop

   56 Var: Identifier
   57    | Identifier L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

   58 Identifier: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 9 48 51
IDENT (259) 58
FUNCTION (260) 3
BEGIN_PARAMS (261) 3
END_PARAMS (262) 3
BEGIN_LOCALS (263) 3
END_LOCALS (264) 3
BEGIN_BODY (265) 3
END_BODY (266) 3
BEGINLOOP (267) 16 17
ENDLOOP (268) 16 17
SEMICOLON (269) 3 4 6
RETURN (270) 21
ENUM (271) 10
COLON (272) 8 9 10
INTEGER (273) 8 9
COMMA (274) 12 22 55
ARRAY (275) 9
L_SQUARE_BRACKET (276) 9 57
R_SQUARE_BRACKET (277) 9 57
L_PAREN (278) 10 33 49 52 53
R_PAREN (279) 10 33 49 52 53
IF (280) 14 15
ELSE (281) 15
THEN (282) 14 15
CONTINUE (283) 20
ENDIF (284) 14 15
OF (285) 9
READ (286) 18
WRITE (287) 19
DO (288) 17
WHILE (289) 16 17
TRUE (290) 31
FALSE (291) 32
PLUS (292) 41
MINUS (293) 40 50 51 52
MULT (294) 45
DIV (295) 44
MOD (296) 43
LT (297) 36
LTE (298) 38
GT (299) 37
GTE (300) 39
EQ (301) 34
NEQ (302) 35
NOT (303) 29
AND (304) 26
OR (305) 24
ASSIGN (306) 13


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1 2, on right: 0 2
Function (54)
    on left: 3, on right: 2
Dec (55)
    on left: 4 5, on right: 3 4
Stmt (56)
    on left: 6 7, on right: 3 6 14 15 16 17
Declaration (57)
    on left: 8 9 10, on right: 4
Ident (58)
    on left: 11 12, on right: 8 9 10 12
Statement (59)
    on left: 13 14 15 16 17 18 19 20 21, on right: 6
E_BRANCH (60)
    on left: 22 23, on right: 18 19 22
Bool_Expr (61)
    on left: 24 25, on right: 14 15 16 17 24 33
Relation_And_Expr (62)
    on left: 26 27, on right: 24 25 26
Relation_Expr (63)
    on left: 28 29, on right: 26 27
RE_branch (64)
    on left: 30 31 32 33, on right: 28 29
Comp (65)
    on left: 34 35 36 37 38 39, on right: 30
Expression (66)
    on left: 40 41 42, on right: 13 21 30 40 41 49 52 54 55 57
Multiplicative_Expr (67)
    on left: 43 44 45 46, on right: 40 41 42 43 44 45
Term (68)
    on left: 47 48 49 50 51 52 53, on right: 43 44 45 46
Expr_Loop (69)
    on left: 54 55, on right: 53 55
Var (70)
    on left: 56 57, on right: 13 22 23 47 50
Identifier (71)
    on left: 58, on right: 3 11 12 53 56 57


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 2
    Function  go to state 3


State 1

    3 Function: FUNCTION . Identifier SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    IDENT  shift, and go to state 4

    Identifier  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    2 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 7
    Function  go to state 3


State 4

   58 Identifier: IDENT .

    $default  reduce using rule 58 (Identifier)


State 5

    3 Function: FUNCTION Identifier . SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    2 Program: Function Program .

    $default  reduce using rule 2 (Program)


State 8

    3 Function: FUNCTION Identifier SEMICOLON . BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    3 Function: FUNCTION Identifier SEMICOLON BEGIN_PARAMS . Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 5 (Dec)

    Dec          go to state 10
    Declaration  go to state 11
    Ident        go to state 12
    Identifier   go to state 13


State 10

    3 Function: FUNCTION Identifier SEMICOLON BEGIN_PARAMS Dec . END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    END_PARAMS  shift, and go to state 14


State 11

    4 Dec: Declaration . SEMICOLON Dec

    SEMICOLON  shift, and go to state 15


State 12

    8 Declaration: Ident . COLON INTEGER
    9            | Ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | Ident . COLON ENUM L_PAREN Ident R_PAREN

    COLON  shift, and go to state 16


State 13

   11 Ident: Identifier .
   12      | Identifier . COMMA Ident

    COMMA  shift, and go to state 17

    $default  reduce using rule 11 (Ident)


State 14

    3 Function: FUNCTION Identifier SEMICOLON BEGIN_PARAMS Dec END_PARAMS . BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    BEGIN_LOCALS  shift, and go to state 18


State 15

    4 Dec: Declaration SEMICOLON . Dec

    IDENT  shift, and go to state 4

    $default  reduce using rule 5 (Dec)

    Dec          go to state 19
    Declaration  go to state 11
    Ident        go to state 12
    Identifier   go to state 13


State 16

    8 Declaration: Ident COLON . INTEGER
    9            | Ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | Ident COLON . ENUM L_PAREN Ident R_PAREN

    ENUM     shift, and go to state 20
    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 17

   12 Ident: Identifier COMMA . Ident

    IDENT  shift, and go to state 4

    Ident       go to state 23
    Identifier  go to state 13


State 18

    3 Function: FUNCTION Identifier SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS . Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 5 (Dec)

    Dec          go to state 24
    Declaration  go to state 11
    Ident        go to state 12
    Identifier   go to state 13


State 19

    4 Dec: Declaration SEMICOLON Dec .

    $default  reduce using rule 4 (Dec)


State 20

   10 Declaration: Ident COLON ENUM . L_PAREN Ident R_PAREN

    L_PAREN  shift, and go to state 25


State 21

    8 Declaration: Ident COLON INTEGER .

    $default  reduce using rule 8 (Declaration)


State 22

    9 Declaration: Ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

   12 Ident: Identifier COMMA Ident .

    $default  reduce using rule 12 (Ident)


State 24

    3 Function: FUNCTION Identifier SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec . END_LOCALS BEGIN_BODY Stmt END_BODY

    END_LOCALS  shift, and go to state 27


State 25

   10 Declaration: Ident COLON ENUM L_PAREN . Ident R_PAREN

    IDENT  shift, and go to state 4

    Ident       go to state 28
    Identifier  go to state 13


State 26

    9 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 27

    3 Function: FUNCTION Identifier SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS . BEGIN_BODY Stmt END_BODY

    BEGIN_BODY  shift, and go to state 30


State 28

   10 Declaration: Ident COLON ENUM L_PAREN Ident . R_PAREN

    R_PAREN  shift, and go to state 31


State 29

    9 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 30

    3 Function: FUNCTION Identifier SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY . Stmt END_BODY

    IDENT     shift, and go to state 4
    RETURN    shift, and go to state 33
    IF        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    DO        shift, and go to state 38
    WHILE     shift, and go to state 39

    $default  reduce using rule 7 (Stmt)

    Stmt        go to state 40
    Statement   go to state 41
    Var         go to state 42
    Identifier  go to state 43


State 31

   10 Declaration: Ident COLON ENUM L_PAREN Ident R_PAREN .

    $default  reduce using rule 10 (Declaration)


State 32

    9 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 44


State 33

   21 Statement: RETURN . Expression

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Expression           go to state 48
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 34

   14 Statement: IF . Bool_Expr THEN Stmt ENDIF
   15          | IF . Bool_Expr THEN Stmt ELSE Stmt ENDIF

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 56

    Bool_Expr            go to state 57
    Relation_And_Expr    go to state 58
    Relation_Expr        go to state 59
    RE_branch            go to state 60
    Expression           go to state 61
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 35

   20 Statement: CONTINUE .

    $default  reduce using rule 20 (Statement)


State 36

   18 Statement: READ . E_BRANCH

    IDENT  shift, and go to state 4

    E_BRANCH    go to state 62
    Var         go to state 63
    Identifier  go to state 43


State 37

   19 Statement: WRITE . E_BRANCH

    IDENT  shift, and go to state 4

    E_BRANCH    go to state 64
    Var         go to state 63
    Identifier  go to state 43


State 38

   17 Statement: DO . BEGINLOOP Stmt ENDLOOP WHILE Bool_Expr

    BEGINLOOP  shift, and go to state 65


State 39

   16 Statement: WHILE . Bool_Expr BEGINLOOP Stmt ENDLOOP

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 56

    Bool_Expr            go to state 66
    Relation_And_Expr    go to state 58
    Relation_Expr        go to state 59
    RE_branch            go to state 60
    Expression           go to state 61
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 40

    3 Function: FUNCTION Identifier SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt . END_BODY

    END_BODY  shift, and go to state 67


State 41

    6 Stmt: Statement . SEMICOLON Stmt

    SEMICOLON  shift, and go to state 68


State 42

   13 Statement: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 69


State 43

   56 Var: Identifier .
   57    | Identifier . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 56 (Var)


State 44

    9 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 71


State 45

   48 Term: NUMBER .

    $default  reduce using rule 48 (Term)


State 46

   49 Term: L_PAREN . Expression R_PAREN

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Expression           go to state 72
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 47

   50 Term: MINUS . Var
   51     | MINUS . NUMBER
   52     | MINUS . L_PAREN Expression R_PAREN

    NUMBER   shift, and go to state 73
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 74

    Var         go to state 75
    Identifier  go to state 43


State 48

   21 Statement: RETURN Expression .

    $default  reduce using rule 21 (Statement)


State 49

   40 Expression: Multiplicative_Expr . MINUS Expression
   41           | Multiplicative_Expr . PLUS Expression
   42           | Multiplicative_Expr .

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 42 (Expression)


State 50

   43 Multiplicative_Expr: Term . MOD Multiplicative_Expr
   44                    | Term . DIV Multiplicative_Expr
   45                    | Term . MULT Multiplicative_Expr
   46                    | Term .

    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80

    $default  reduce using rule 46 (Multiplicative_Expr)


State 51

   47 Term: Var .

    $default  reduce using rule 47 (Term)


State 52

   53 Term: Identifier . L_PAREN Expr_Loop R_PAREN
   56 Var: Identifier .
   57    | Identifier . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 70
    L_PAREN           shift, and go to state 81

    $default  reduce using rule 56 (Var)


State 53

   33 RE_branch: L_PAREN . Bool_Expr R_PAREN
   49 Term: L_PAREN . Expression R_PAREN

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 56

    Bool_Expr            go to state 82
    Relation_And_Expr    go to state 58
    Relation_Expr        go to state 59
    RE_branch            go to state 60
    Expression           go to state 83
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 54

   31 RE_branch: TRUE .

    $default  reduce using rule 31 (RE_branch)


State 55

   32 RE_branch: FALSE .

    $default  reduce using rule 32 (RE_branch)


State 56

   29 Relation_Expr: NOT . RE_branch

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    MINUS    shift, and go to state 47

    RE_branch            go to state 84
    Expression           go to state 61
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 57

   14 Statement: IF Bool_Expr . THEN Stmt ENDIF
   15          | IF Bool_Expr . THEN Stmt ELSE Stmt ENDIF

    THEN  shift, and go to state 85


State 58

   24 Bool_Expr: Relation_And_Expr . OR Bool_Expr
   25          | Relation_And_Expr .

    OR  shift, and go to state 86

    $default  reduce using rule 25 (Bool_Expr)


State 59

   26 Relation_And_Expr: Relation_Expr . AND Relation_And_Expr
   27                  | Relation_Expr .

    AND  shift, and go to state 87

    $default  reduce using rule 27 (Relation_And_Expr)


State 60

   28 Relation_Expr: RE_branch .

    $default  reduce using rule 28 (Relation_Expr)


State 61

   30 RE_branch: Expression . Comp Expression

    LT   shift, and go to state 88
    LTE  shift, and go to state 89
    GT   shift, and go to state 90
    GTE  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93

    Comp  go to state 94


State 62

   18 Statement: READ E_BRANCH .

    $default  reduce using rule 18 (Statement)


State 63

   22 E_BRANCH: Var . COMMA E_BRANCH
   23         | Var .

    COMMA  shift, and go to state 95

    $default  reduce using rule 23 (E_BRANCH)


State 64

   19 Statement: WRITE E_BRANCH .

    $default  reduce using rule 19 (Statement)


State 65

   17 Statement: DO BEGINLOOP . Stmt ENDLOOP WHILE Bool_Expr

    IDENT     shift, and go to state 4
    RETURN    shift, and go to state 33
    IF        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    DO        shift, and go to state 38
    WHILE     shift, and go to state 39

    $default  reduce using rule 7 (Stmt)

    Stmt        go to state 96
    Statement   go to state 41
    Var         go to state 42
    Identifier  go to state 43


State 66

   16 Statement: WHILE Bool_Expr . BEGINLOOP Stmt ENDLOOP

    BEGINLOOP  shift, and go to state 97


State 67

    3 Function: FUNCTION Identifier SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY .

    $default  reduce using rule 3 (Function)


State 68

    6 Stmt: Statement SEMICOLON . Stmt

    IDENT     shift, and go to state 4
    RETURN    shift, and go to state 33
    IF        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    DO        shift, and go to state 38
    WHILE     shift, and go to state 39

    $default  reduce using rule 7 (Stmt)

    Stmt        go to state 98
    Statement   go to state 41
    Var         go to state 42
    Identifier  go to state 43


State 69

   13 Statement: Var ASSIGN . Expression

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Expression           go to state 99
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 70

   57 Var: Identifier L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Expression           go to state 100
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 71

    9 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (Declaration)


State 72

   49 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 101


State 73

   51 Term: MINUS NUMBER .

    $default  reduce using rule 51 (Term)


State 74

   52 Term: MINUS L_PAREN . Expression R_PAREN

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Expression           go to state 102
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 75

   50 Term: MINUS Var .

    $default  reduce using rule 50 (Term)


State 76

   41 Expression: Multiplicative_Expr PLUS . Expression

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Expression           go to state 103
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 77

   40 Expression: Multiplicative_Expr MINUS . Expression

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Expression           go to state 104
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 78

   45 Multiplicative_Expr: Term MULT . Multiplicative_Expr

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Multiplicative_Expr  go to state 105
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 79

   44 Multiplicative_Expr: Term DIV . Multiplicative_Expr

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Multiplicative_Expr  go to state 106
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 80

   43 Multiplicative_Expr: Term MOD . Multiplicative_Expr

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Multiplicative_Expr  go to state 107
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 81

   53 Term: Identifier L_PAREN . Expr_Loop R_PAREN

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Expression           go to state 108
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Expr_Loop            go to state 109
    Var                  go to state 51
    Identifier           go to state 52


State 82

   33 RE_branch: L_PAREN Bool_Expr . R_PAREN

    R_PAREN  shift, and go to state 110


State 83

   30 RE_branch: Expression . Comp Expression
   49 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 101
    LT       shift, and go to state 88
    LTE      shift, and go to state 89
    GT       shift, and go to state 90
    GTE      shift, and go to state 91
    EQ       shift, and go to state 92
    NEQ      shift, and go to state 93

    Comp  go to state 94


State 84

   29 Relation_Expr: NOT RE_branch .

    $default  reduce using rule 29 (Relation_Expr)


State 85

   14 Statement: IF Bool_Expr THEN . Stmt ENDIF
   15          | IF Bool_Expr THEN . Stmt ELSE Stmt ENDIF

    IDENT     shift, and go to state 4
    RETURN    shift, and go to state 33
    IF        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    DO        shift, and go to state 38
    WHILE     shift, and go to state 39

    $default  reduce using rule 7 (Stmt)

    Stmt        go to state 111
    Statement   go to state 41
    Var         go to state 42
    Identifier  go to state 43


State 86

   24 Bool_Expr: Relation_And_Expr OR . Bool_Expr

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 56

    Bool_Expr            go to state 112
    Relation_And_Expr    go to state 58
    Relation_Expr        go to state 59
    RE_branch            go to state 60
    Expression           go to state 61
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 87

   26 Relation_And_Expr: Relation_Expr AND . Relation_And_Expr

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 56

    Relation_And_Expr    go to state 113
    Relation_Expr        go to state 59
    RE_branch            go to state 60
    Expression           go to state 61
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 88

   36 Comp: LT .

    $default  reduce using rule 36 (Comp)


State 89

   38 Comp: LTE .

    $default  reduce using rule 38 (Comp)


State 90

   37 Comp: GT .

    $default  reduce using rule 37 (Comp)


State 91

   39 Comp: GTE .

    $default  reduce using rule 39 (Comp)


State 92

   34 Comp: EQ .

    $default  reduce using rule 34 (Comp)


State 93

   35 Comp: NEQ .

    $default  reduce using rule 35 (Comp)


State 94

   30 RE_branch: Expression Comp . Expression

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Expression           go to state 114
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 95

   22 E_BRANCH: Var COMMA . E_BRANCH

    IDENT  shift, and go to state 4

    E_BRANCH    go to state 115
    Var         go to state 63
    Identifier  go to state 43


State 96

   17 Statement: DO BEGINLOOP Stmt . ENDLOOP WHILE Bool_Expr

    ENDLOOP  shift, and go to state 116


State 97

   16 Statement: WHILE Bool_Expr BEGINLOOP . Stmt ENDLOOP

    IDENT     shift, and go to state 4
    RETURN    shift, and go to state 33
    IF        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    DO        shift, and go to state 38
    WHILE     shift, and go to state 39

    $default  reduce using rule 7 (Stmt)

    Stmt        go to state 117
    Statement   go to state 41
    Var         go to state 42
    Identifier  go to state 43


State 98

    6 Stmt: Statement SEMICOLON Stmt .

    $default  reduce using rule 6 (Stmt)


State 99

   13 Statement: Var ASSIGN Expression .

    $default  reduce using rule 13 (Statement)


State 100

   57 Var: Identifier L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 118


State 101

   49 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 49 (Term)


State 102

   52 Term: MINUS L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 119


State 103

   41 Expression: Multiplicative_Expr PLUS Expression .

    $default  reduce using rule 41 (Expression)


State 104

   40 Expression: Multiplicative_Expr MINUS Expression .

    $default  reduce using rule 40 (Expression)


State 105

   45 Multiplicative_Expr: Term MULT Multiplicative_Expr .

    $default  reduce using rule 45 (Multiplicative_Expr)


State 106

   44 Multiplicative_Expr: Term DIV Multiplicative_Expr .

    $default  reduce using rule 44 (Multiplicative_Expr)


State 107

   43 Multiplicative_Expr: Term MOD Multiplicative_Expr .

    $default  reduce using rule 43 (Multiplicative_Expr)


State 108

   54 Expr_Loop: Expression .
   55          | Expression . COMMA Expr_Loop

    COMMA  shift, and go to state 120

    $default  reduce using rule 54 (Expr_Loop)


State 109

   53 Term: Identifier L_PAREN Expr_Loop . R_PAREN

    R_PAREN  shift, and go to state 121


State 110

   33 RE_branch: L_PAREN Bool_Expr R_PAREN .

    $default  reduce using rule 33 (RE_branch)


State 111

   14 Statement: IF Bool_Expr THEN Stmt . ENDIF
   15          | IF Bool_Expr THEN Stmt . ELSE Stmt ENDIF

    ELSE   shift, and go to state 122
    ENDIF  shift, and go to state 123


State 112

   24 Bool_Expr: Relation_And_Expr OR Bool_Expr .

    $default  reduce using rule 24 (Bool_Expr)


State 113

   26 Relation_And_Expr: Relation_Expr AND Relation_And_Expr .

    $default  reduce using rule 26 (Relation_And_Expr)


State 114

   30 RE_branch: Expression Comp Expression .

    $default  reduce using rule 30 (RE_branch)


State 115

   22 E_BRANCH: Var COMMA E_BRANCH .

    $default  reduce using rule 22 (E_BRANCH)


State 116

   17 Statement: DO BEGINLOOP Stmt ENDLOOP . WHILE Bool_Expr

    WHILE  shift, and go to state 124


State 117

   16 Statement: WHILE Bool_Expr BEGINLOOP Stmt . ENDLOOP

    ENDLOOP  shift, and go to state 125


State 118

   57 Var: Identifier L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 57 (Var)


State 119

   52 Term: MINUS L_PAREN Expression R_PAREN .

    $default  reduce using rule 52 (Term)


State 120

   55 Expr_Loop: Expression COMMA . Expr_Loop

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    Expression           go to state 108
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Expr_Loop            go to state 126
    Var                  go to state 51
    Identifier           go to state 52


State 121

   53 Term: Identifier L_PAREN Expr_Loop R_PAREN .

    $default  reduce using rule 53 (Term)


State 122

   15 Statement: IF Bool_Expr THEN Stmt ELSE . Stmt ENDIF

    IDENT     shift, and go to state 4
    RETURN    shift, and go to state 33
    IF        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    DO        shift, and go to state 38
    WHILE     shift, and go to state 39

    $default  reduce using rule 7 (Stmt)

    Stmt        go to state 127
    Statement   go to state 41
    Var         go to state 42
    Identifier  go to state 43


State 123

   14 Statement: IF Bool_Expr THEN Stmt ENDIF .

    $default  reduce using rule 14 (Statement)


State 124

   17 Statement: DO BEGINLOOP Stmt ENDLOOP WHILE . Bool_Expr

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 56

    Bool_Expr            go to state 128
    Relation_And_Expr    go to state 58
    Relation_Expr        go to state 59
    RE_branch            go to state 60
    Expression           go to state 61
    Multiplicative_Expr  go to state 49
    Term                 go to state 50
    Var                  go to state 51
    Identifier           go to state 52


State 125

   16 Statement: WHILE Bool_Expr BEGINLOOP Stmt ENDLOOP .

    $default  reduce using rule 16 (Statement)


State 126

   55 Expr_Loop: Expression COMMA Expr_Loop .

    $default  reduce using rule 55 (Expr_Loop)


State 127

   15 Statement: IF Bool_Expr THEN Stmt ELSE Stmt . ENDIF

    ENDIF  shift, and go to state 129


State 128

   17 Statement: DO BEGINLOOP Stmt ENDLOOP WHILE Bool_Expr .

    $default  reduce using rule 17 (Statement)


State 129

   15 Statement: IF Bool_Expr THEN Stmt ELSE Stmt ENDIF .

    $default  reduce using rule 15 (Statement)
