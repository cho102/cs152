Grammar

    0 $accept: Program $end

    1 Program: %empty
    2        | Function Program

    3 Function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    4 FuncIdent: IDENT

    5 Dec: Declaration SEMICOLON Dec
    6    | %empty

    7 Stmt: Statement SEMICOLON Stmt
    8     | %empty

    9 Declaration: Ident COLON INTEGER
   10            | Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | Ident COLON ENUM L_PAREN Ident R_PAREN

   12 Ident: Identifier
   13      | Identifier COMMA Ident

   14 Statement: Var ASSIGN Expression
   15          | IF Bool_Expr THEN Stmt ENDIF
   16          | IF Bool_Expr THEN Stmt ELSE Stmt ENDIF
   17          | WHILE Bool_Expr BEGINLOOP Stmt ENDLOOP
   18          | DO BEGINLOOP Stmt ENDLOOP WHILE Bool_Expr
   19          | READ E_BRANCH
   20          | WRITE E_BRANCH
   21          | CONTINUE
   22          | RETURN Expression

   23 E_BRANCH: Var COMMA E_BRANCH
   24         | Var

   25 Bool_Expr: Relation_And_Expr OR Bool_Expr
   26          | Relation_And_Expr

   27 Relation_And_Expr: Relation_Expr AND Relation_And_Expr
   28                  | Relation_Expr

   29 Relation_Expr: RE_branch
   30              | NOT RE_branch

   31 RE_branch: Expression Comp Expression
   32          | TRUE
   33          | FALSE
   34          | L_PAREN Bool_Expr R_PAREN

   35 Comp: EQ
   36     | NEQ
   37     | LT
   38     | GT
   39     | LTE
   40     | GTE

   41 Expression: Multiplicative_Expr MINUS Expression
   42           | Multiplicative_Expr PLUS Expression
   43           | Multiplicative_Expr

   44 Multiplicative_Expr: Term MOD Multiplicative_Expr
   45                    | Term DIV Multiplicative_Expr
   46                    | Term MULT Multiplicative_Expr
   47                    | Term

   48 Term: Var
   49     | NUMBER
   50     | L_PAREN Expression R_PAREN
   51     | MINUS Var
   52     | MINUS NUMBER
   53     | MINUS L_PAREN Expression R_PAREN
   54     | Identifier L_PAREN Expr_Loop R_PAREN

   55 Expr_Loop: Expression
   56          | Expression COMMA Expr_Loop

   57 Var: Identifier
   58    | Identifier L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

   59 Identifier: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 10 49 52
IDENT (259) 4 59
FUNCTION (260) 3
BEGIN_PARAMS (261) 3
END_PARAMS (262) 3
BEGIN_LOCALS (263) 3
END_LOCALS (264) 3
BEGIN_BODY (265) 3
END_BODY (266) 3
BEGINLOOP (267) 17 18
ENDLOOP (268) 17 18
SEMICOLON (269) 3 5 7
RETURN (270) 22
ENUM (271) 11
COLON (272) 9 10 11
INTEGER (273) 9 10
COMMA (274) 13 23 56
ARRAY (275) 10
L_SQUARE_BRACKET (276) 10 58
R_SQUARE_BRACKET (277) 10 58
L_PAREN (278) 11 34 50 53 54
R_PAREN (279) 11 34 50 53 54
IF (280) 15 16
ELSE (281) 16
THEN (282) 15 16
CONTINUE (283) 21
ENDIF (284) 15 16
OF (285) 10
READ (286) 19
WRITE (287) 20
DO (288) 18
WHILE (289) 17 18
TRUE (290) 32
FALSE (291) 33
PLUS (292) 42
MINUS (293) 41 51 52 53
MULT (294) 46
DIV (295) 45
MOD (296) 44
LT (297) 37
LTE (298) 39
GT (299) 38
GTE (300) 40
EQ (301) 35
NEQ (302) 36
NOT (303) 30
AND (304) 27
OR (305) 25
ASSIGN (306) 14


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1 2, on right: 0 2
Function (54)
    on left: 3, on right: 2
FuncIdent (55)
    on left: 4, on right: 3
Dec (56)
    on left: 5 6, on right: 3 5
Stmt (57)
    on left: 7 8, on right: 3 7 15 16 17 18
Declaration (58)
    on left: 9 10 11, on right: 5
Ident (59)
    on left: 12 13, on right: 9 10 11 13
Statement (60)
    on left: 14 15 16 17 18 19 20 21 22, on right: 7
E_BRANCH (61)
    on left: 23 24, on right: 19 20 23
Bool_Expr (62)
    on left: 25 26, on right: 15 16 17 18 25 34
Relation_And_Expr (63)
    on left: 27 28, on right: 25 26 27
Relation_Expr (64)
    on left: 29 30, on right: 27 28
RE_branch (65)
    on left: 31 32 33 34, on right: 29 30
Comp (66)
    on left: 35 36 37 38 39 40, on right: 31
Expression (67)
    on left: 41 42 43, on right: 14 22 31 41 42 50 53 55 56 58
Multiplicative_Expr (68)
    on left: 44 45 46 47, on right: 41 42 43 44 45 46
Term (69)
    on left: 48 49 50 51 52 53 54, on right: 44 45 46 47
Expr_Loop (70)
    on left: 55 56, on right: 54 56
Var (71)
    on left: 57 58, on right: 14 23 24 48 51
Identifier (72)
    on left: 59, on right: 12 13 54 57 58


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 2
    Function  go to state 3


State 1

    3 Function: FUNCTION . FuncIdent SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    IDENT  shift, and go to state 4

    FuncIdent  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    2 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 7
    Function  go to state 3


State 4

    4 FuncIdent: IDENT .

    $default  reduce using rule 4 (FuncIdent)


State 5

    3 Function: FUNCTION FuncIdent . SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    2 Program: Function Program .

    $default  reduce using rule 2 (Program)


State 8

    3 Function: FUNCTION FuncIdent SEMICOLON . BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    3 Function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS . Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Dec)

    Dec          go to state 11
    Declaration  go to state 12
    Ident        go to state 13
    Identifier   go to state 14


State 10

   59 Identifier: IDENT .

    $default  reduce using rule 59 (Identifier)


State 11

    3 Function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS Dec . END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    5 Dec: Declaration . SEMICOLON Dec

    SEMICOLON  shift, and go to state 16


State 13

    9 Declaration: Ident . COLON INTEGER
   10            | Ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | Ident . COLON ENUM L_PAREN Ident R_PAREN

    COLON  shift, and go to state 17


State 14

   12 Ident: Identifier .
   13      | Identifier . COMMA Ident

    COMMA  shift, and go to state 18

    $default  reduce using rule 12 (Ident)


State 15

    3 Function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS Dec END_PARAMS . BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    5 Dec: Declaration SEMICOLON . Dec

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Dec)

    Dec          go to state 20
    Declaration  go to state 12
    Ident        go to state 13
    Identifier   go to state 14


State 17

    9 Declaration: Ident COLON . INTEGER
   10            | Ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | Ident COLON . ENUM L_PAREN Ident R_PAREN

    ENUM     shift, and go to state 21
    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23


State 18

   13 Ident: Identifier COMMA . Ident

    IDENT  shift, and go to state 10

    Ident       go to state 24
    Identifier  go to state 14


State 19

    3 Function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS . Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Dec)

    Dec          go to state 25
    Declaration  go to state 12
    Ident        go to state 13
    Identifier   go to state 14


State 20

    5 Dec: Declaration SEMICOLON Dec .

    $default  reduce using rule 5 (Dec)


State 21

   11 Declaration: Ident COLON ENUM . L_PAREN Ident R_PAREN

    L_PAREN  shift, and go to state 26


State 22

    9 Declaration: Ident COLON INTEGER .

    $default  reduce using rule 9 (Declaration)


State 23

   10 Declaration: Ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 24

   13 Ident: Identifier COMMA Ident .

    $default  reduce using rule 13 (Ident)


State 25

    3 Function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec . END_LOCALS BEGIN_BODY Stmt END_BODY

    END_LOCALS  shift, and go to state 28


State 26

   11 Declaration: Ident COLON ENUM L_PAREN . Ident R_PAREN

    IDENT  shift, and go to state 10

    Ident       go to state 29
    Identifier  go to state 14


State 27

   10 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 28

    3 Function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS . BEGIN_BODY Stmt END_BODY

    BEGIN_BODY  shift, and go to state 31


State 29

   11 Declaration: Ident COLON ENUM L_PAREN Ident . R_PAREN

    R_PAREN  shift, and go to state 32


State 30

   10 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


State 31

    3 Function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY . Stmt END_BODY

    IDENT     shift, and go to state 10
    RETURN    shift, and go to state 34
    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    DO        shift, and go to state 39
    WHILE     shift, and go to state 40

    $default  reduce using rule 8 (Stmt)

    Stmt        go to state 41
    Statement   go to state 42
    Var         go to state 43
    Identifier  go to state 44


State 32

   11 Declaration: Ident COLON ENUM L_PAREN Ident R_PAREN .

    $default  reduce using rule 11 (Declaration)


State 33

   10 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 45


State 34

   22 Statement: RETURN . Expression

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Expression           go to state 49
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 35

   15 Statement: IF . Bool_Expr THEN Stmt ENDIF
   16          | IF . Bool_Expr THEN Stmt ELSE Stmt ENDIF

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    MINUS    shift, and go to state 48
    NOT      shift, and go to state 57

    Bool_Expr            go to state 58
    Relation_And_Expr    go to state 59
    Relation_Expr        go to state 60
    RE_branch            go to state 61
    Expression           go to state 62
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 36

   21 Statement: CONTINUE .

    $default  reduce using rule 21 (Statement)


State 37

   19 Statement: READ . E_BRANCH

    IDENT  shift, and go to state 10

    E_BRANCH    go to state 63
    Var         go to state 64
    Identifier  go to state 44


State 38

   20 Statement: WRITE . E_BRANCH

    IDENT  shift, and go to state 10

    E_BRANCH    go to state 65
    Var         go to state 64
    Identifier  go to state 44


State 39

   18 Statement: DO . BEGINLOOP Stmt ENDLOOP WHILE Bool_Expr

    BEGINLOOP  shift, and go to state 66


State 40

   17 Statement: WHILE . Bool_Expr BEGINLOOP Stmt ENDLOOP

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    MINUS    shift, and go to state 48
    NOT      shift, and go to state 57

    Bool_Expr            go to state 67
    Relation_And_Expr    go to state 59
    Relation_Expr        go to state 60
    RE_branch            go to state 61
    Expression           go to state 62
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 41

    3 Function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt . END_BODY

    END_BODY  shift, and go to state 68


State 42

    7 Stmt: Statement . SEMICOLON Stmt

    SEMICOLON  shift, and go to state 69


State 43

   14 Statement: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 70


State 44

   57 Var: Identifier .
   58    | Identifier . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 71

    $default  reduce using rule 57 (Var)


State 45

   10 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 72


State 46

   49 Term: NUMBER .

    $default  reduce using rule 49 (Term)


State 47

   50 Term: L_PAREN . Expression R_PAREN

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Expression           go to state 73
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 48

   51 Term: MINUS . Var
   52     | MINUS . NUMBER
   53     | MINUS . L_PAREN Expression R_PAREN

    NUMBER   shift, and go to state 74
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 75

    Var         go to state 76
    Identifier  go to state 44


State 49

   22 Statement: RETURN Expression .

    $default  reduce using rule 22 (Statement)


State 50

   41 Expression: Multiplicative_Expr . MINUS Expression
   42           | Multiplicative_Expr . PLUS Expression
   43           | Multiplicative_Expr .

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 43 (Expression)


State 51

   44 Multiplicative_Expr: Term . MOD Multiplicative_Expr
   45                    | Term . DIV Multiplicative_Expr
   46                    | Term . MULT Multiplicative_Expr
   47                    | Term .

    MULT  shift, and go to state 79
    DIV   shift, and go to state 80
    MOD   shift, and go to state 81

    $default  reduce using rule 47 (Multiplicative_Expr)


State 52

   48 Term: Var .

    $default  reduce using rule 48 (Term)


State 53

   54 Term: Identifier . L_PAREN Expr_Loop R_PAREN
   57 Var: Identifier .
   58    | Identifier . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 71
    L_PAREN           shift, and go to state 82

    $default  reduce using rule 57 (Var)


State 54

   34 RE_branch: L_PAREN . Bool_Expr R_PAREN
   50 Term: L_PAREN . Expression R_PAREN

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    MINUS    shift, and go to state 48
    NOT      shift, and go to state 57

    Bool_Expr            go to state 83
    Relation_And_Expr    go to state 59
    Relation_Expr        go to state 60
    RE_branch            go to state 61
    Expression           go to state 84
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 55

   32 RE_branch: TRUE .

    $default  reduce using rule 32 (RE_branch)


State 56

   33 RE_branch: FALSE .

    $default  reduce using rule 33 (RE_branch)


State 57

   30 Relation_Expr: NOT . RE_branch

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    MINUS    shift, and go to state 48

    RE_branch            go to state 85
    Expression           go to state 62
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 58

   15 Statement: IF Bool_Expr . THEN Stmt ENDIF
   16          | IF Bool_Expr . THEN Stmt ELSE Stmt ENDIF

    THEN  shift, and go to state 86


State 59

   25 Bool_Expr: Relation_And_Expr . OR Bool_Expr
   26          | Relation_And_Expr .

    OR  shift, and go to state 87

    $default  reduce using rule 26 (Bool_Expr)


State 60

   27 Relation_And_Expr: Relation_Expr . AND Relation_And_Expr
   28                  | Relation_Expr .

    AND  shift, and go to state 88

    $default  reduce using rule 28 (Relation_And_Expr)


State 61

   29 Relation_Expr: RE_branch .

    $default  reduce using rule 29 (Relation_Expr)


State 62

   31 RE_branch: Expression . Comp Expression

    LT   shift, and go to state 89
    LTE  shift, and go to state 90
    GT   shift, and go to state 91
    GTE  shift, and go to state 92
    EQ   shift, and go to state 93
    NEQ  shift, and go to state 94

    Comp  go to state 95


State 63

   19 Statement: READ E_BRANCH .

    $default  reduce using rule 19 (Statement)


State 64

   23 E_BRANCH: Var . COMMA E_BRANCH
   24         | Var .

    COMMA  shift, and go to state 96

    $default  reduce using rule 24 (E_BRANCH)


State 65

   20 Statement: WRITE E_BRANCH .

    $default  reduce using rule 20 (Statement)


State 66

   18 Statement: DO BEGINLOOP . Stmt ENDLOOP WHILE Bool_Expr

    IDENT     shift, and go to state 10
    RETURN    shift, and go to state 34
    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    DO        shift, and go to state 39
    WHILE     shift, and go to state 40

    $default  reduce using rule 8 (Stmt)

    Stmt        go to state 97
    Statement   go to state 42
    Var         go to state 43
    Identifier  go to state 44


State 67

   17 Statement: WHILE Bool_Expr . BEGINLOOP Stmt ENDLOOP

    BEGINLOOP  shift, and go to state 98


State 68

    3 Function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY .

    $default  reduce using rule 3 (Function)


State 69

    7 Stmt: Statement SEMICOLON . Stmt

    IDENT     shift, and go to state 10
    RETURN    shift, and go to state 34
    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    DO        shift, and go to state 39
    WHILE     shift, and go to state 40

    $default  reduce using rule 8 (Stmt)

    Stmt        go to state 99
    Statement   go to state 42
    Var         go to state 43
    Identifier  go to state 44


State 70

   14 Statement: Var ASSIGN . Expression

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Expression           go to state 100
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 71

   58 Var: Identifier L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Expression           go to state 101
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 72

   10 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (Declaration)


State 73

   50 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 102


State 74

   52 Term: MINUS NUMBER .

    $default  reduce using rule 52 (Term)


State 75

   53 Term: MINUS L_PAREN . Expression R_PAREN

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Expression           go to state 103
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 76

   51 Term: MINUS Var .

    $default  reduce using rule 51 (Term)


State 77

   42 Expression: Multiplicative_Expr PLUS . Expression

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Expression           go to state 104
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 78

   41 Expression: Multiplicative_Expr MINUS . Expression

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Expression           go to state 105
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 79

   46 Multiplicative_Expr: Term MULT . Multiplicative_Expr

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Multiplicative_Expr  go to state 106
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 80

   45 Multiplicative_Expr: Term DIV . Multiplicative_Expr

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Multiplicative_Expr  go to state 107
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 81

   44 Multiplicative_Expr: Term MOD . Multiplicative_Expr

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Multiplicative_Expr  go to state 108
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 82

   54 Term: Identifier L_PAREN . Expr_Loop R_PAREN

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Expression           go to state 109
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Expr_Loop            go to state 110
    Var                  go to state 52
    Identifier           go to state 53


State 83

   34 RE_branch: L_PAREN Bool_Expr . R_PAREN

    R_PAREN  shift, and go to state 111


State 84

   31 RE_branch: Expression . Comp Expression
   50 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 102
    LT       shift, and go to state 89
    LTE      shift, and go to state 90
    GT       shift, and go to state 91
    GTE      shift, and go to state 92
    EQ       shift, and go to state 93
    NEQ      shift, and go to state 94

    Comp  go to state 95


State 85

   30 Relation_Expr: NOT RE_branch .

    $default  reduce using rule 30 (Relation_Expr)


State 86

   15 Statement: IF Bool_Expr THEN . Stmt ENDIF
   16          | IF Bool_Expr THEN . Stmt ELSE Stmt ENDIF

    IDENT     shift, and go to state 10
    RETURN    shift, and go to state 34
    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    DO        shift, and go to state 39
    WHILE     shift, and go to state 40

    $default  reduce using rule 8 (Stmt)

    Stmt        go to state 112
    Statement   go to state 42
    Var         go to state 43
    Identifier  go to state 44


State 87

   25 Bool_Expr: Relation_And_Expr OR . Bool_Expr

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    MINUS    shift, and go to state 48
    NOT      shift, and go to state 57

    Bool_Expr            go to state 113
    Relation_And_Expr    go to state 59
    Relation_Expr        go to state 60
    RE_branch            go to state 61
    Expression           go to state 62
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 88

   27 Relation_And_Expr: Relation_Expr AND . Relation_And_Expr

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    MINUS    shift, and go to state 48
    NOT      shift, and go to state 57

    Relation_And_Expr    go to state 114
    Relation_Expr        go to state 60
    RE_branch            go to state 61
    Expression           go to state 62
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 89

   37 Comp: LT .

    $default  reduce using rule 37 (Comp)


State 90

   39 Comp: LTE .

    $default  reduce using rule 39 (Comp)


State 91

   38 Comp: GT .

    $default  reduce using rule 38 (Comp)


State 92

   40 Comp: GTE .

    $default  reduce using rule 40 (Comp)


State 93

   35 Comp: EQ .

    $default  reduce using rule 35 (Comp)


State 94

   36 Comp: NEQ .

    $default  reduce using rule 36 (Comp)


State 95

   31 RE_branch: Expression Comp . Expression

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Expression           go to state 115
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 96

   23 E_BRANCH: Var COMMA . E_BRANCH

    IDENT  shift, and go to state 10

    E_BRANCH    go to state 116
    Var         go to state 64
    Identifier  go to state 44


State 97

   18 Statement: DO BEGINLOOP Stmt . ENDLOOP WHILE Bool_Expr

    ENDLOOP  shift, and go to state 117


State 98

   17 Statement: WHILE Bool_Expr BEGINLOOP . Stmt ENDLOOP

    IDENT     shift, and go to state 10
    RETURN    shift, and go to state 34
    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    DO        shift, and go to state 39
    WHILE     shift, and go to state 40

    $default  reduce using rule 8 (Stmt)

    Stmt        go to state 118
    Statement   go to state 42
    Var         go to state 43
    Identifier  go to state 44


State 99

    7 Stmt: Statement SEMICOLON Stmt .

    $default  reduce using rule 7 (Stmt)


State 100

   14 Statement: Var ASSIGN Expression .

    $default  reduce using rule 14 (Statement)


State 101

   58 Var: Identifier L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 119


State 102

   50 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 50 (Term)


State 103

   53 Term: MINUS L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 120


State 104

   42 Expression: Multiplicative_Expr PLUS Expression .

    $default  reduce using rule 42 (Expression)


State 105

   41 Expression: Multiplicative_Expr MINUS Expression .

    $default  reduce using rule 41 (Expression)


State 106

   46 Multiplicative_Expr: Term MULT Multiplicative_Expr .

    $default  reduce using rule 46 (Multiplicative_Expr)


State 107

   45 Multiplicative_Expr: Term DIV Multiplicative_Expr .

    $default  reduce using rule 45 (Multiplicative_Expr)


State 108

   44 Multiplicative_Expr: Term MOD Multiplicative_Expr .

    $default  reduce using rule 44 (Multiplicative_Expr)


State 109

   55 Expr_Loop: Expression .
   56          | Expression . COMMA Expr_Loop

    COMMA  shift, and go to state 121

    $default  reduce using rule 55 (Expr_Loop)


State 110

   54 Term: Identifier L_PAREN Expr_Loop . R_PAREN

    R_PAREN  shift, and go to state 122


State 111

   34 RE_branch: L_PAREN Bool_Expr R_PAREN .

    $default  reduce using rule 34 (RE_branch)


State 112

   15 Statement: IF Bool_Expr THEN Stmt . ENDIF
   16          | IF Bool_Expr THEN Stmt . ELSE Stmt ENDIF

    ELSE   shift, and go to state 123
    ENDIF  shift, and go to state 124


State 113

   25 Bool_Expr: Relation_And_Expr OR Bool_Expr .

    $default  reduce using rule 25 (Bool_Expr)


State 114

   27 Relation_And_Expr: Relation_Expr AND Relation_And_Expr .

    $default  reduce using rule 27 (Relation_And_Expr)


State 115

   31 RE_branch: Expression Comp Expression .

    $default  reduce using rule 31 (RE_branch)


State 116

   23 E_BRANCH: Var COMMA E_BRANCH .

    $default  reduce using rule 23 (E_BRANCH)


State 117

   18 Statement: DO BEGINLOOP Stmt ENDLOOP . WHILE Bool_Expr

    WHILE  shift, and go to state 125


State 118

   17 Statement: WHILE Bool_Expr BEGINLOOP Stmt . ENDLOOP

    ENDLOOP  shift, and go to state 126


State 119

   58 Var: Identifier L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 58 (Var)


State 120

   53 Term: MINUS L_PAREN Expression R_PAREN .

    $default  reduce using rule 53 (Term)


State 121

   56 Expr_Loop: Expression COMMA . Expr_Loop

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    Expression           go to state 109
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Expr_Loop            go to state 127
    Var                  go to state 52
    Identifier           go to state 53


State 122

   54 Term: Identifier L_PAREN Expr_Loop R_PAREN .

    $default  reduce using rule 54 (Term)


State 123

   16 Statement: IF Bool_Expr THEN Stmt ELSE . Stmt ENDIF

    IDENT     shift, and go to state 10
    RETURN    shift, and go to state 34
    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    DO        shift, and go to state 39
    WHILE     shift, and go to state 40

    $default  reduce using rule 8 (Stmt)

    Stmt        go to state 128
    Statement   go to state 42
    Var         go to state 43
    Identifier  go to state 44


State 124

   15 Statement: IF Bool_Expr THEN Stmt ENDIF .

    $default  reduce using rule 15 (Statement)


State 125

   18 Statement: DO BEGINLOOP Stmt ENDLOOP WHILE . Bool_Expr

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    MINUS    shift, and go to state 48
    NOT      shift, and go to state 57

    Bool_Expr            go to state 129
    Relation_And_Expr    go to state 59
    Relation_Expr        go to state 60
    RE_branch            go to state 61
    Expression           go to state 62
    Multiplicative_Expr  go to state 50
    Term                 go to state 51
    Var                  go to state 52
    Identifier           go to state 53


State 126

   17 Statement: WHILE Bool_Expr BEGINLOOP Stmt ENDLOOP .

    $default  reduce using rule 17 (Statement)


State 127

   56 Expr_Loop: Expression COMMA Expr_Loop .

    $default  reduce using rule 56 (Expr_Loop)


State 128

   16 Statement: IF Bool_Expr THEN Stmt ELSE Stmt . ENDIF

    ENDIF  shift, and go to state 130


State 129

   18 Statement: DO BEGINLOOP Stmt ENDLOOP WHILE Bool_Expr .

    $default  reduce using rule 18 (Statement)


State 130

   16 Statement: IF Bool_Expr THEN Stmt ELSE Stmt ENDIF .

    $default  reduce using rule 16 (Statement)
