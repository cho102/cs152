Terminals unused in grammar

   FOR


Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: %empty
    3          | Function Functions

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    5 Dec: Declaration SEMICOLON Dec
    6    | %empty

    7 Stmt: Statement SEMICOLON Stmt
    8     | Statement SEMICOLON

    9 Declaration: Ident COLON INTEGER
   10            | Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | Ident COLON ENUM L_PAREN Ident R_PAREN INTEGER

   12 Ident: IDENT
   13      | IDENT COMMA Ident

   14 Statement: A
   15          | B
   16          | C
   17          | D
   18          | E
   19          | F
   20          | G
   21          | H

   22 A: Var ASSIGN Expression

   23 B: IF Bool_Expr THEN Stmt ENDIF
   24  | IF Bool_Expr THEN Stmt ELSE Stmt ENDIF

   25 C: WHILE Bool_Expr BEGINLOOP Stmt ENDLOOP

   26 D: DO BEGINLOOP Stmt ENDLOOP WHILE Bool_Expr

   27 E: READ Var E_BRANCH

   28 E_BRANCH: COMMA Var E_BRANCH
   29         | %empty

   30 F: WRITE Var E_BRANCH

   31 G: CONTINUE

   32 H: RETURN Expression

   33 Bool_Expr: Relation_And_Expr RAE

   34 RAE: OR Relation_And_Expr RAE
   35    | %empty

   36 Relation_And_Expr: Relation_Expr RE

   37 RE: AND Relation_Expr RE
   38   | %empty

   39 Relation_Expr: RE_branch
   40              | NOT RE_branch

   41 RE_branch: RE_A
   42          | TRUE
   43          | FALSE
   44          | RE_D

   45 RE_A: Expression Comp Expression

   46 RE_D: L_PAREN Bool_Expr R_PAREN

   47 Comp: EQ
   48     | NEQ
   49     | LT
   50     | GT
   51     | LTE
   52     | GTE

   53 Expression: Multiplicative_Expr ME

   54 ME: MINUS Multiplicative_Expr ME
   55   | PLUS Multiplicative_Expr ME
   56   | %empty

   57 Multiplicative_Expr: Term ME_branch

   58 ME_branch: MOD Term ME_branch
   59          | DIV Term ME_branch
   60          | MULT Term ME_branch
   61          | %empty

   62 Term: Term_branch
   63     | MINUS Term_branch
   64     | IDENT L_PAREN Expr R_PAREN

   65 Term_branch: Var
   66            | NUMBER
   67            | L_PAREN Expression R_PAREN

   68 Expr: Expr_Loop
   69     | %empty

   70 Expr_Loop: Expression
   71          | Expression COMMA Expr_Loop

   72 Var: IDENT
   73    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 9 10 11
ARRAY (266) 10
OF (267) 10
IF (268) 23 24
THEN (269) 23 24
ENDIF (270) 23 24
ELSE (271) 24
WHILE (272) 25 26
FOR (273)
DO (274) 26
BEGINLOOP (275) 25 26
ENDLOOP (276) 25 26
CONTINUE (277) 31
READ (278) 27
WRITE (279) 30
TRUE (280) 42
FALSE (281) 43
SEMICOLON (282) 4 5 7 8
COLON (283) 9 10 11
COMMA (284) 13 28 71
L_PAREN (285) 11 46 64 67
R_PAREN (286) 11 46 64 67
L_SQUARE_BRACKET (287) 10 73
R_SQUARE_BRACKET (288) 10 73
ASSIGN (289) 22
RETURN (290) 32
ENUM (291) 11
IDENT (292) 4 12 13 64 72 73
NUMBER (293) 10 66
MULT (294) 60
DIV (295) 59
MOD (296) 58
PLUS (297) 55
MINUS (298) 54 63
LT (299) 49
LTE (300) 51
GT (301) 50
GTE (302) 52
EQ (303) 47
NEQ (304) 48
NOT (305) 40
AND (306) 37
OR (307) 34


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program (54)
    on left: 1, on right: 0
Functions (55)
    on left: 2 3, on right: 1 3
Function (56)
    on left: 4, on right: 3
Dec (57)
    on left: 5 6, on right: 4 5
Stmt (58)
    on left: 7 8, on right: 4 7 23 24 25 26
Declaration (59)
    on left: 9 10 11, on right: 5
Ident (60)
    on left: 12 13, on right: 9 10 11 13
Statement (61)
    on left: 14 15 16 17 18 19 20 21, on right: 7 8
A (62)
    on left: 22, on right: 14
B (63)
    on left: 23 24, on right: 15
C (64)
    on left: 25, on right: 16
D (65)
    on left: 26, on right: 17
E (66)
    on left: 27, on right: 18
E_BRANCH (67)
    on left: 28 29, on right: 27 28 30
F (68)
    on left: 30, on right: 19
G (69)
    on left: 31, on right: 20
H (70)
    on left: 32, on right: 21
Bool_Expr (71)
    on left: 33, on right: 23 24 25 26 46
RAE (72)
    on left: 34 35, on right: 33 34
Relation_And_Expr (73)
    on left: 36, on right: 33 34
RE (74)
    on left: 37 38, on right: 36 37
Relation_Expr (75)
    on left: 39 40, on right: 36 37
RE_branch (76)
    on left: 41 42 43 44, on right: 39 40
RE_A (77)
    on left: 45, on right: 41
RE_D (78)
    on left: 46, on right: 44
Comp (79)
    on left: 47 48 49 50 51 52, on right: 45
Expression (80)
    on left: 53, on right: 22 32 45 67 70 71 73
ME (81)
    on left: 54 55 56, on right: 53 54 55
Multiplicative_Expr (82)
    on left: 57, on right: 53 54 55
ME_branch (83)
    on left: 58 59 60 61, on right: 57 58 59 60
Term (84)
    on left: 62 63 64, on right: 57 58 59 60
Term_branch (85)
    on left: 65 66 67, on right: 62 63
Expr (86)
    on left: 68 69, on right: 64
Expr_Loop (87)
    on left: 70 71, on right: 68 71
Var (88)
    on left: 72 73, on right: 22 27 28 30 65


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    Program    go to state 2
    Functions  go to state 3
    Function   go to state 4


State 1

    4 Function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 4

    3 Functions: Function . Functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    Functions  go to state 7
    Function   go to state 4


State 5

    4 Function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    3 Functions: Function Functions .

    $default  reduce using rule 3 (Functions)


State 8

    4 Function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Dec)

    Dec          go to state 11
    Declaration  go to state 12
    Ident        go to state 13


State 10

   12 Ident: IDENT .
   13      | IDENT . COMMA Ident

    COMMA  shift, and go to state 14

    $default  reduce using rule 12 (Ident)


State 11

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Dec . END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    5 Dec: Declaration . SEMICOLON Dec

    SEMICOLON  shift, and go to state 16


State 13

    9 Declaration: Ident . COLON INTEGER
   10            | Ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | Ident . COLON ENUM L_PAREN Ident R_PAREN INTEGER

    COLON  shift, and go to state 17


State 14

   13 Ident: IDENT COMMA . Ident

    IDENT  shift, and go to state 10

    Ident  go to state 18


State 15

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Dec END_PARAMS . BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    5 Dec: Declaration SEMICOLON . Dec

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Dec)

    Dec          go to state 20
    Declaration  go to state 12
    Ident        go to state 13


State 17

    9 Declaration: Ident COLON . INTEGER
   10            | Ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | Ident COLON . ENUM L_PAREN Ident R_PAREN INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22
    ENUM     shift, and go to state 23


State 18

   13 Ident: IDENT COMMA Ident .

    $default  reduce using rule 13 (Ident)


State 19

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS . Dec END_LOCALS BEGIN_BODY Stmt END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Dec)

    Dec          go to state 24
    Declaration  go to state 12
    Ident        go to state 13


State 20

    5 Dec: Declaration SEMICOLON Dec .

    $default  reduce using rule 5 (Dec)


State 21

    9 Declaration: Ident COLON INTEGER .

    $default  reduce using rule 9 (Declaration)


State 22

   10 Declaration: Ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

   11 Declaration: Ident COLON ENUM . L_PAREN Ident R_PAREN INTEGER

    L_PAREN  shift, and go to state 26


State 24

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec . END_LOCALS BEGIN_BODY Stmt END_BODY

    END_LOCALS  shift, and go to state 27


State 25

   10 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 26

   11 Declaration: Ident COLON ENUM L_PAREN . Ident R_PAREN INTEGER

    IDENT  shift, and go to state 10

    Ident  go to state 29


State 27

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS . BEGIN_BODY Stmt END_BODY

    BEGIN_BODY  shift, and go to state 30


State 28

   10 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


State 29

   11 Declaration: Ident COLON ENUM L_PAREN Ident . R_PAREN INTEGER

    R_PAREN  shift, and go to state 32


State 30

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY . Stmt END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Stmt       go to state 41
    Statement  go to state 42
    A          go to state 43
    B          go to state 44
    C          go to state 45
    D          go to state 46
    E          go to state 47
    F          go to state 48
    G          go to state 49
    H          go to state 50
    Var        go to state 51


State 31

   10 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 52


State 32

   11 Declaration: Ident COLON ENUM L_PAREN Ident R_PAREN . INTEGER

    INTEGER  shift, and go to state 53


State 33

   23 B: IF . Bool_Expr THEN Stmt ENDIF
   24  | IF . Bool_Expr THEN Stmt ELSE Stmt ENDIF

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59
    NOT      shift, and go to state 60

    Bool_Expr            go to state 61
    Relation_And_Expr    go to state 62
    Relation_Expr        go to state 63
    RE_branch            go to state 64
    RE_A                 go to state 65
    RE_D                 go to state 66
    Expression           go to state 67
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 34

   25 C: WHILE . Bool_Expr BEGINLOOP Stmt ENDLOOP

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59
    NOT      shift, and go to state 60

    Bool_Expr            go to state 72
    Relation_And_Expr    go to state 62
    Relation_Expr        go to state 63
    RE_branch            go to state 64
    RE_A                 go to state 65
    RE_D                 go to state 66
    Expression           go to state 67
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 35

   26 D: DO . BEGINLOOP Stmt ENDLOOP WHILE Bool_Expr

    BEGINLOOP  shift, and go to state 73


State 36

   31 G: CONTINUE .

    $default  reduce using rule 31 (G)


State 37

   27 E: READ . Var E_BRANCH

    IDENT  shift, and go to state 40

    Var  go to state 74


State 38

   30 F: WRITE . Var E_BRANCH

    IDENT  shift, and go to state 40

    Var  go to state 75


State 39

   32 H: RETURN . Expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    Expression           go to state 77
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 40

   72 Var: IDENT .
   73    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 78

    $default  reduce using rule 72 (Var)


State 41

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt . END_BODY

    END_BODY  shift, and go to state 79


State 42

    7 Stmt: Statement . SEMICOLON Stmt
    8     | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 43

   14 Statement: A .

    $default  reduce using rule 14 (Statement)


State 44

   15 Statement: B .

    $default  reduce using rule 15 (Statement)


State 45

   16 Statement: C .

    $default  reduce using rule 16 (Statement)


State 46

   17 Statement: D .

    $default  reduce using rule 17 (Statement)


State 47

   18 Statement: E .

    $default  reduce using rule 18 (Statement)


State 48

   19 Statement: F .

    $default  reduce using rule 19 (Statement)


State 49

   20 Statement: G .

    $default  reduce using rule 20 (Statement)


State 50

   21 Statement: H .

    $default  reduce using rule 21 (Statement)


State 51

   22 A: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 81


State 52

   10 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 82


State 53

   11 Declaration: Ident COLON ENUM L_PAREN Ident R_PAREN INTEGER .

    $default  reduce using rule 11 (Declaration)


State 54

   42 RE_branch: TRUE .

    $default  reduce using rule 42 (RE_branch)


State 55

   43 RE_branch: FALSE .

    $default  reduce using rule 43 (RE_branch)


State 56

   46 RE_D: L_PAREN . Bool_Expr R_PAREN
   67 Term_branch: L_PAREN . Expression R_PAREN

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59
    NOT      shift, and go to state 60

    Bool_Expr            go to state 83
    Relation_And_Expr    go to state 62
    Relation_Expr        go to state 63
    RE_branch            go to state 64
    RE_A                 go to state 65
    RE_D                 go to state 66
    Expression           go to state 84
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 57

   64 Term: IDENT . L_PAREN Expr R_PAREN
   72 Var: IDENT .
   73    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 85
    L_SQUARE_BRACKET  shift, and go to state 78

    $default  reduce using rule 72 (Var)


State 58

   66 Term_branch: NUMBER .

    $default  reduce using rule 66 (Term_branch)


State 59

   63 Term: MINUS . Term_branch

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 58

    Term_branch  go to state 86
    Var          go to state 71


State 60

   40 Relation_Expr: NOT . RE_branch

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    RE_branch            go to state 87
    RE_A                 go to state 65
    RE_D                 go to state 66
    Expression           go to state 67
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 61

   23 B: IF Bool_Expr . THEN Stmt ENDIF
   24  | IF Bool_Expr . THEN Stmt ELSE Stmt ENDIF

    THEN  shift, and go to state 88


State 62

   33 Bool_Expr: Relation_And_Expr . RAE

    OR  shift, and go to state 89

    $default  reduce using rule 35 (RAE)

    RAE  go to state 90


State 63

   36 Relation_And_Expr: Relation_Expr . RE

    AND  shift, and go to state 91

    $default  reduce using rule 38 (RE)

    RE  go to state 92


State 64

   39 Relation_Expr: RE_branch .

    $default  reduce using rule 39 (Relation_Expr)


State 65

   41 RE_branch: RE_A .

    $default  reduce using rule 41 (RE_branch)


State 66

   44 RE_branch: RE_D .

    $default  reduce using rule 44 (RE_branch)


State 67

   45 RE_A: Expression . Comp Expression

    LT   shift, and go to state 93
    LTE  shift, and go to state 94
    GT   shift, and go to state 95
    GTE  shift, and go to state 96
    EQ   shift, and go to state 97
    NEQ  shift, and go to state 98

    Comp  go to state 99


State 68

   53 Expression: Multiplicative_Expr . ME

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101

    $default  reduce using rule 56 (ME)

    ME  go to state 102


State 69

   57 Multiplicative_Expr: Term . ME_branch

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 61 (ME_branch)

    ME_branch  go to state 106


State 70

   62 Term: Term_branch .

    $default  reduce using rule 62 (Term)


State 71

   65 Term_branch: Var .

    $default  reduce using rule 65 (Term_branch)


State 72

   25 C: WHILE Bool_Expr . BEGINLOOP Stmt ENDLOOP

    BEGINLOOP  shift, and go to state 107


State 73

   26 D: DO BEGINLOOP . Stmt ENDLOOP WHILE Bool_Expr

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Stmt       go to state 108
    Statement  go to state 42
    A          go to state 43
    B          go to state 44
    C          go to state 45
    D          go to state 46
    E          go to state 47
    F          go to state 48
    G          go to state 49
    H          go to state 50
    Var        go to state 51


State 74

   27 E: READ Var . E_BRANCH

    COMMA  shift, and go to state 109

    $default  reduce using rule 29 (E_BRANCH)

    E_BRANCH  go to state 110


State 75

   30 F: WRITE Var . E_BRANCH

    COMMA  shift, and go to state 109

    $default  reduce using rule 29 (E_BRANCH)

    E_BRANCH  go to state 111


State 76

   67 Term_branch: L_PAREN . Expression R_PAREN

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    Expression           go to state 112
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 77

   32 H: RETURN Expression .

    $default  reduce using rule 32 (H)


State 78

   73 Var: IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    Expression           go to state 113
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 79

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Dec END_PARAMS BEGIN_LOCALS Dec END_LOCALS BEGIN_BODY Stmt END_BODY .

    $default  reduce using rule 4 (Function)


State 80

    7 Stmt: Statement SEMICOLON . Stmt
    8     | Statement SEMICOLON .

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 8 (Stmt)

    Stmt       go to state 114
    Statement  go to state 42
    A          go to state 43
    B          go to state 44
    C          go to state 45
    D          go to state 46
    E          go to state 47
    F          go to state 48
    G          go to state 49
    H          go to state 50
    Var        go to state 51


State 81

   22 A: Var ASSIGN . Expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    Expression           go to state 115
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 82

   10 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (Declaration)


State 83

   46 RE_D: L_PAREN Bool_Expr . R_PAREN

    R_PAREN  shift, and go to state 116


State 84

   45 RE_A: Expression . Comp Expression
   67 Term_branch: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 117
    LT       shift, and go to state 93
    LTE      shift, and go to state 94
    GT       shift, and go to state 95
    GTE      shift, and go to state 96
    EQ       shift, and go to state 97
    NEQ      shift, and go to state 98

    Comp  go to state 99


State 85

   64 Term: IDENT L_PAREN . Expr R_PAREN

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    $default  reduce using rule 69 (Expr)

    Expression           go to state 118
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Expr                 go to state 119
    Expr_Loop            go to state 120
    Var                  go to state 71


State 86

   63 Term: MINUS Term_branch .

    $default  reduce using rule 63 (Term)


State 87

   40 Relation_Expr: NOT RE_branch .

    $default  reduce using rule 40 (Relation_Expr)


State 88

   23 B: IF Bool_Expr THEN . Stmt ENDIF
   24  | IF Bool_Expr THEN . Stmt ELSE Stmt ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Stmt       go to state 121
    Statement  go to state 42
    A          go to state 43
    B          go to state 44
    C          go to state 45
    D          go to state 46
    E          go to state 47
    F          go to state 48
    G          go to state 49
    H          go to state 50
    Var        go to state 51


State 89

   34 RAE: OR . Relation_And_Expr RAE

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59
    NOT      shift, and go to state 60

    Relation_And_Expr    go to state 122
    Relation_Expr        go to state 63
    RE_branch            go to state 64
    RE_A                 go to state 65
    RE_D                 go to state 66
    Expression           go to state 67
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 90

   33 Bool_Expr: Relation_And_Expr RAE .

    $default  reduce using rule 33 (Bool_Expr)


State 91

   37 RE: AND . Relation_Expr RE

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59
    NOT      shift, and go to state 60

    Relation_Expr        go to state 123
    RE_branch            go to state 64
    RE_A                 go to state 65
    RE_D                 go to state 66
    Expression           go to state 67
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 92

   36 Relation_And_Expr: Relation_Expr RE .

    $default  reduce using rule 36 (Relation_And_Expr)


State 93

   49 Comp: LT .

    $default  reduce using rule 49 (Comp)


State 94

   51 Comp: LTE .

    $default  reduce using rule 51 (Comp)


State 95

   50 Comp: GT .

    $default  reduce using rule 50 (Comp)


State 96

   52 Comp: GTE .

    $default  reduce using rule 52 (Comp)


State 97

   47 Comp: EQ .

    $default  reduce using rule 47 (Comp)


State 98

   48 Comp: NEQ .

    $default  reduce using rule 48 (Comp)


State 99

   45 RE_A: Expression Comp . Expression

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    Expression           go to state 124
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 100

   55 ME: PLUS . Multiplicative_Expr ME

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    Multiplicative_Expr  go to state 125
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 101

   54 ME: MINUS . Multiplicative_Expr ME

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    Multiplicative_Expr  go to state 126
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 102

   53 Expression: Multiplicative_Expr ME .

    $default  reduce using rule 53 (Expression)


State 103

   60 ME_branch: MULT . Term ME_branch

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    Term         go to state 127
    Term_branch  go to state 70
    Var          go to state 71


State 104

   59 ME_branch: DIV . Term ME_branch

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    Term         go to state 128
    Term_branch  go to state 70
    Var          go to state 71


State 105

   58 ME_branch: MOD . Term ME_branch

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    Term         go to state 129
    Term_branch  go to state 70
    Var          go to state 71


State 106

   57 Multiplicative_Expr: Term ME_branch .

    $default  reduce using rule 57 (Multiplicative_Expr)


State 107

   25 C: WHILE Bool_Expr BEGINLOOP . Stmt ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Stmt       go to state 130
    Statement  go to state 42
    A          go to state 43
    B          go to state 44
    C          go to state 45
    D          go to state 46
    E          go to state 47
    F          go to state 48
    G          go to state 49
    H          go to state 50
    Var        go to state 51


State 108

   26 D: DO BEGINLOOP Stmt . ENDLOOP WHILE Bool_Expr

    ENDLOOP  shift, and go to state 131


State 109

   28 E_BRANCH: COMMA . Var E_BRANCH

    IDENT  shift, and go to state 40

    Var  go to state 132


State 110

   27 E: READ Var E_BRANCH .

    $default  reduce using rule 27 (E)


State 111

   30 F: WRITE Var E_BRANCH .

    $default  reduce using rule 30 (F)


State 112

   67 Term_branch: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 117


State 113

   73 Var: IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 133


State 114

    7 Stmt: Statement SEMICOLON Stmt .

    $default  reduce using rule 7 (Stmt)


State 115

   22 A: Var ASSIGN Expression .

    $default  reduce using rule 22 (A)


State 116

   46 RE_D: L_PAREN Bool_Expr R_PAREN .

    $default  reduce using rule 46 (RE_D)


State 117

   67 Term_branch: L_PAREN Expression R_PAREN .

    $default  reduce using rule 67 (Term_branch)


State 118

   70 Expr_Loop: Expression .
   71          | Expression . COMMA Expr_Loop

    COMMA  shift, and go to state 134

    $default  reduce using rule 70 (Expr_Loop)


State 119

   64 Term: IDENT L_PAREN Expr . R_PAREN

    R_PAREN  shift, and go to state 135


State 120

   68 Expr: Expr_Loop .

    $default  reduce using rule 68 (Expr)


State 121

   23 B: IF Bool_Expr THEN Stmt . ENDIF
   24  | IF Bool_Expr THEN Stmt . ELSE Stmt ENDIF

    ENDIF  shift, and go to state 136
    ELSE   shift, and go to state 137


State 122

   34 RAE: OR Relation_And_Expr . RAE

    OR  shift, and go to state 89

    $default  reduce using rule 35 (RAE)

    RAE  go to state 138


State 123

   37 RE: AND Relation_Expr . RE

    AND  shift, and go to state 91

    $default  reduce using rule 38 (RE)

    RE  go to state 139


State 124

   45 RE_A: Expression Comp Expression .

    $default  reduce using rule 45 (RE_A)


State 125

   55 ME: PLUS Multiplicative_Expr . ME

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101

    $default  reduce using rule 56 (ME)

    ME  go to state 140


State 126

   54 ME: MINUS Multiplicative_Expr . ME

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101

    $default  reduce using rule 56 (ME)

    ME  go to state 141


State 127

   60 ME_branch: MULT Term . ME_branch

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 61 (ME_branch)

    ME_branch  go to state 142


State 128

   59 ME_branch: DIV Term . ME_branch

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 61 (ME_branch)

    ME_branch  go to state 143


State 129

   58 ME_branch: MOD Term . ME_branch

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 61 (ME_branch)

    ME_branch  go to state 144


State 130

   25 C: WHILE Bool_Expr BEGINLOOP Stmt . ENDLOOP

    ENDLOOP  shift, and go to state 145


State 131

   26 D: DO BEGINLOOP Stmt ENDLOOP . WHILE Bool_Expr

    WHILE  shift, and go to state 146


State 132

   28 E_BRANCH: COMMA Var . E_BRANCH

    COMMA  shift, and go to state 109

    $default  reduce using rule 29 (E_BRANCH)

    E_BRANCH  go to state 147


State 133

   73 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 73 (Var)


State 134

   71 Expr_Loop: Expression COMMA . Expr_Loop

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59

    Expression           go to state 118
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Expr_Loop            go to state 148
    Var                  go to state 71


State 135

   64 Term: IDENT L_PAREN Expr R_PAREN .

    $default  reduce using rule 64 (Term)


State 136

   23 B: IF Bool_Expr THEN Stmt ENDIF .

    $default  reduce using rule 23 (B)


State 137

   24 B: IF Bool_Expr THEN Stmt ELSE . Stmt ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Stmt       go to state 149
    Statement  go to state 42
    A          go to state 43
    B          go to state 44
    C          go to state 45
    D          go to state 46
    E          go to state 47
    F          go to state 48
    G          go to state 49
    H          go to state 50
    Var        go to state 51


State 138

   34 RAE: OR Relation_And_Expr RAE .

    $default  reduce using rule 34 (RAE)


State 139

   37 RE: AND Relation_Expr RE .

    $default  reduce using rule 37 (RE)


State 140

   55 ME: PLUS Multiplicative_Expr ME .

    $default  reduce using rule 55 (ME)


State 141

   54 ME: MINUS Multiplicative_Expr ME .

    $default  reduce using rule 54 (ME)


State 142

   60 ME_branch: MULT Term ME_branch .

    $default  reduce using rule 60 (ME_branch)


State 143

   59 ME_branch: DIV Term ME_branch .

    $default  reduce using rule 59 (ME_branch)


State 144

   58 ME_branch: MOD Term ME_branch .

    $default  reduce using rule 58 (ME_branch)


State 145

   25 C: WHILE Bool_Expr BEGINLOOP Stmt ENDLOOP .

    $default  reduce using rule 25 (C)


State 146

   26 D: DO BEGINLOOP Stmt ENDLOOP WHILE . Bool_Expr

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    IDENT    shift, and go to state 57
    NUMBER   shift, and go to state 58
    MINUS    shift, and go to state 59
    NOT      shift, and go to state 60

    Bool_Expr            go to state 150
    Relation_And_Expr    go to state 62
    Relation_Expr        go to state 63
    RE_branch            go to state 64
    RE_A                 go to state 65
    RE_D                 go to state 66
    Expression           go to state 67
    Multiplicative_Expr  go to state 68
    Term                 go to state 69
    Term_branch          go to state 70
    Var                  go to state 71


State 147

   28 E_BRANCH: COMMA Var E_BRANCH .

    $default  reduce using rule 28 (E_BRANCH)


State 148

   71 Expr_Loop: Expression COMMA Expr_Loop .

    $default  reduce using rule 71 (Expr_Loop)


State 149

   24 B: IF Bool_Expr THEN Stmt ELSE Stmt . ENDIF

    ENDIF  shift, and go to state 151


State 150

   26 D: DO BEGINLOOP Stmt ENDLOOP WHILE Bool_Expr .

    $default  reduce using rule 26 (D)


State 151

   24 B: IF Bool_Expr THEN Stmt ELSE Stmt ENDIF .

    $default  reduce using rule 24 (B)
